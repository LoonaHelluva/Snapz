@startuml
class com.example.snapz.adapters.ChatsAdapter$ViewHolder {
+ ImageView chatImage
+ TextView chatName
+ ConstraintLayout lay
+ <<Create>> ViewHolder(View)
}


class com.example.snapz.adapters.ChatsAdapter {
+  chats
+  me
+ <<Create>> ChatsAdapter(MutableList<ChatModel>,UserModel)
+ ViewHolder onCreateViewHolder(ViewGroup,Int)
+ void onBindViewHolder(ViewHolder,Int)
+ Int getItemCount()
}


interface com.example.snapz.adapters.OnLongCLickListener {
+ void onLongClickMessageLIstener(Int,View)
+ void onLognClickImageListener(Int,View)
}

class com.example.snapz.adapters.MessageAdapter$ViewHolder {
+ ConstraintLayout sent
+ TextView messageSent
+ ConstraintLayout imageSentLay
+ ImageView imageSent
+ ConstraintLayout received
+ TextView messageReceived
+ ConstraintLayout imageReceivedLay
+ ImageView imageReceived
+ <<Create>> ViewHolder(View,OnLongCLickListener)
}


class com.example.snapz.adapters.MessageAdapter {
+  messages
+ <<Create>> MessageAdapter(MutableList<MessageModel>,OnLongCLickListener)
+ ViewHolder onCreateViewHolder(ViewGroup,Int)
+ Int getItemCount()
+ void onBindViewHolder(ViewHolder,Int)
}


class com.example.snapz.adapters.SearchAdapter$ViewHolder {
+  userImage
+  userName
+ <<Create>> ViewHolder(View)
}


class com.example.snapz.adapters.SearchAdapter {
+  users
+ <<Create>> SearchAdapter(View,ArrayList<UserModel>)
+ ViewHolder onCreateViewHolder(ViewGroup,Int)
+ Int getItemCount()
+ void onBindViewHolder(ViewHolder,Int)
}


class com.example.snapz.Classes.MessageModel {
+ <<Create>> MessageModel(,String,,String,,String,,String,,String)
}

class com.example.snapz.Classes.FireHelper$Companion {
+  auth
+  user
+  Chats
+  Users
+  Storage
+  me
+ void deleteMessage(MessageModel,String)
+ void editMessage(MessageModel,String,String)
+ void deleteImage(MessageModel,String)
+ void uploadFileToStorage(Context,Uri,String,String)
+ String getType(Context,Uri)
+ String fileName(Context,Uri)
+ void createNewUser(String,String,String,Context)
+ void createNewChat(String,String,String)
+ void isChatExist(String)
+ void sendMessage(String,String,String,String)
+ Boolean isMyNameExist(String,UserModel)
}


class com.example.snapz.Classes.FireHelper {
}
class com.example.snapz.Classes.UserModel {
+ <<Create>> UserModel(,String,,String,,String,,String)
}

class com.example.snapz.Classes.ChatModel {
+ <<Create>> ChatModel(,String,,String,,String)
}



com.example.snapz.adapters.ChatsAdapter +.. com.example.snapz.adapters.ChatsAdapter$ViewHolder
com.example.snapz.adapters.ViewHolder <|-- com.example.snapz.adapters.ChatsAdapter$ViewHolder
com.example.snapz.adapters.Adapter <|-- com.example.snapz.adapters.ChatsAdapter
com.example.snapz.adapters.MessageAdapter +.. com.example.snapz.adapters.MessageAdapter$ViewHolder
com.example.snapz.adapters.ViewHolder <|-- com.example.snapz.adapters.MessageAdapter$ViewHolder
com.example.snapz.adapters.Adapter <|-- com.example.snapz.adapters.MessageAdapter
com.example.snapz.adapters.SearchAdapter +.. com.example.snapz.adapters.SearchAdapter$ViewHolder
com.example.snapz.adapters.ViewHolder <|-- com.example.snapz.adapters.SearchAdapter$ViewHolder
com.example.snapz.adapters.Adapter <|-- com.example.snapz.adapters.SearchAdapter
com.example.snapz.Classes.FireHelper +.. com.example.snapz.Classes.FireHelper$Companion
@enduml